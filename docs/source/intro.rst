=========
Описание
=========

--------------------
Основные возможности
--------------------

Данный модуль предназначен для нормализации (нахождения корректного) названия страны посредством работы с прилагающейся простейшей базой данных.

На данный момент модуль поддерживает следующие операции:

* Нормализация названия страны
* Добавление в базу данных новой пары "возможное название"-"корректное название"
* Удаление из базы данных возможного названия

------------------------
Подробнее о нормализации
------------------------

На вход принимаются: 

* Название страны (официальное, общее, полное или национальное, на любом из 9 (в среднем, зависит от страны) популярных языков (deu, eng, fra, hrv, ita, jpn, nld, rus, spa) )
* Альтернативное название страны (транслит, неофициальное, сокращенное)
* 2-х или 3-х буквенный код страны
* Название столицы страны
* Название региона страны (поддерживается до 14 (в зависимости от страны) переводов для 3700 регионов) 
* Объединения приведенных выше вариантов с различными знаками препинания (например, "London, UK")
* "Странные" варианты, которые сложно классифицировать (добавляются в базу вручную)
* А также все выше приведенные варианты с опечатками и в любом регистре

В результате обработки и поиска по базе данных получаем корректное (по умолчанию - общее) название страны. 

-----------
База данных
-----------

Эта база данных (б/д) создавалась на основе следующих б/д: https://github.com/mledoze/countries и https://github.com/x88/i18nGeoNamesDB, распространяемых с лицензией MIT. 
Она организована в виде словаря - каждому "ключу" (возможному названию) соответствует "значене" (корректное название страны). Это упрощает поиск, добавление и удаление 
элементов. Данная б\д реализована с помощью модуля **shelve** стандартной библиотеки языка Python. В базе содержится более 9700 возможных вариантов названий стран.
Для каждого ключа определяется приоритет: целое число **1** или **2**, и записывается перед ключем. Приоритет **1** означает, что ключ является названием или индексом страны, 
приоритету **2** соответствуют названия столиц и регионов. Также, все ключи приводятся к нижнему регистру, а приоритет записывается вместе со значением Поэтому запись в б/д 
имеет вид: ключ - "some name", значение - "1Correct Name". Подробнее об этом в описании функции нормализации.

-----
Тесты
-----

В модуль встроены тесты, позволяющие проверить его функциональность при внесении изменений. Далее идут тесты и их описание:

#. test_simple_name - проверяет работу функции **normalize_country_name** на простых входных данных
#. test_punctuation_sensitivity - проверяет удаление пунктуации в функции **normalize_country_name**
#. test_upper_register - проверяет работу функции **normalize_country_name** на входной строке в верхнем регистре
#. test_low_register - проверяет работу функции **normalize_country_name** на входной строке в нижнем регистре
#. test_missed_letter - проверяет исправление опечатки типа "пропущенная буква" в функции **normalize_country_name**
#. test_excess_letter - проверяет исправление опечатки типа "лишняя буква" в функции **normalize_country_name**
#. test_another_letter - проверяет исправление опечатки типа "неправильная буква" в функции **normalize_country_name**
#. test_simple_two_words_name - проверяет работу функции **normalize_country_name** с входной строкой из 2-х слов (разделитель - пробел)
#. test_excess_word_name - проверяет работу функции **normalize_country_name** с входной строкой из 2-х слов, одно из которых - лишнее
#. test_american_paris_like_construction - проверяет работу приоритета в функции **normalize_country_name**
#. test_standard_accuracy_result - проверяет вывод функции **normalize_country_name** для несуществующего имени при стандартной точности
#. test_correct_accuracy_type - проверяет ввозможность ввода корректного необязательного аргумента **dif_acc** в функции **normalize_country_name**
#. test_incorrect_accuracy_type - проверяет ввозможность ввода некорректного (тип) необязательного аргумента **dif_acc** в функции **normalize_country_name**
#. test_incorrect_accuracy_value - проверяет ввозможность ввода некорректного (значение) необязательного аргумента **dif_acc** в функции **normalize_country_name**
#. test_non_existing_object_delete - проверяет удаление несуществующего ключа в функции **del_country_name**
#. test_match - проверяет добавление нового ключа и значения в функции **match_country_name**
#. test_existing_object_delete - проверяет удаление существующего ключа в функции **del_country_name**
#. test_correct_priority_match - проверяет добавление нового ключа и значения в функции **match_country_name**, причем необязательный аргумент **priority** корректен
#. test_incorrect_priority_match - проверяет добавление нового ключа и значения в функции **match_country_name**, причем необязательный аргумент **priority** некорректен
#. test_incorrect_match - проверяет добавление некорректного нового ключа и некорректного значения в функции **match_country_name**
#. test_incorrect_delete - проверяет удаление некорректного ключа в функции **del_country_name**

